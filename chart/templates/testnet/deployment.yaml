{{- if .Values.run.testnet -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: ton-testnet-deployment
  labels:
    app: ton-testnet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ton-testnet
  template:
    metadata:
      labels:
        app: ton-testnet
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
      - name: ton-testnet
        image: "{{ .Values.registry }}/{{ .Values.images.testnetFullNode.name }}:{{ .Values.images.testnetFullNode.version }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.ports.testnetFullNode.PUBLIC_PORT }}
          protocol: UDP
        - containerPort: {{ .Values.ports.testnetFullNode.CONSOLE_PORT }}
          protocol: UDP
        - containerPort: {{ .Values.ports.testnetFullNode.LITESERVER_PORT }}
          protocol: UDP
        env:
          - name: PUBLIC_PORT
            value: "{{ .Values.ports.testnetFullNode.PUBLIC_PORT }}"
          - name: CONSOLE_PORT
            value: "{{ .Values.ports.testnetFullNode.CONSOLE_PORT }}"
          - name: LITESERVER_PORT
            value: "{{ .Values.ports.testnetFullNode.LITESERVER_PORT }}"
          - name: NAMESPACE
            value: "{{ .Values.namespace }}"
          - name: SERVICE_ACCOUNT
            value: "{{ .Values.serviceAccount.name }}"
          - name: CONFIG
            value: "{{ .Values.ports.testnetFullNode.CONFIG }}"
          - name: VERBOSE
            value: "{{ .Values.ports.testnetFullNode.VERBOSE }}"
        volumeMounts:
          - mountPath: "/var/ton-work/db/"
            name: ton-testnet-database
            subPath: db
          - mountPath: "/var/ton-work/network/"
            name: ton-testnet-database
            subPath: network
          - name: secret-volume
            readOnly: true
            mountPath: "/etc/secret-volume"

      - name: ton-http-config
        image: "{{ .Values.registry }}/{{ .Values.images.httpConfig.name }}:{{ .Values.images.httpConfig.version }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.ports.httpConfig.PUBLIC_PORT }}
          protocol: TCP
        env:
          - name: PUBLIC_PORT
            value: "{{ .Values.ports.httpConfig.PUBLIC_PORT }}"
        volumeMounts:
          - mountPath: "/var/ton-work/network/"
            name: ton-testnet-database
            subPath: network

      volumes:
        - name: ton-testnet-database
          persistentVolumeClaim:
            claimName: ton-testnet-database
        - name: secret-volume
          secret:
            secretName: {{ .Values.serviceAccount.name }}-token-secret
---
{{- end }}
