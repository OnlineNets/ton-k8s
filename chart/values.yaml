registry: registry.head-labs.com
imagePullPolicy: Always
namespace: ton

# what services to run
run:
  mainnet: false
  testnet: true
  ownnet: true

# By default we create volume and mount it to /var/ton-work/db
persistent:
  tonFullNode:
    storageClassName: manual
    storageSize: 100Gi

  testnetFullNode:
    storageClassName: manual
    storageSize: 100Gi

serviceAccount:
  create: true
  name: "ton"

# Your docker registry keys
imagePullSecrets:
  - name: regcred

images:
  tonFullNode:
    name: ton/ton-node
    version: mainnet-v1

  testnetFullNode:
    name: ton/ton-node
    version: testnet-v1

  httpConfig:
    name: ton/ton-http-config
    version: v1

  toncenter:
    name: ton/ton-toncenter
    version: mainnet-v1

  testnetToncenter:
    name: ton/ton-toncenter
    version: testnet-v1

# Here we use node-ports to auto open ports in nodes
customEnv:
  # MAINNET
  tonFullNode:
    CONSOLE_PORT: 30001
    PUBLIC_PORT: 30002
    LITESERVER_PORT: 30003

  env:
    - name: CONFIG
      value: "https://newton-blockchain.github.io/global.config.json"
    - name: VERBOSE
      value: "3"

  # TESTNET
  testnetFullNode:
    CONSOLE_PORT: 30004
    PUBLIC_PORT: 30005
    LITESERVER_PORT: 30006

    env:
      - name: CONFIG
        value: "https://newton-blockchain.github.io/testnet-global.config.json"
      - name: VERBOSE
        value: "3"

  # OWNNET
  ownnetFullNode:
    CONSOLE_PORT: 30007
    PUBLIC_PORT: 30008
    LITESERVER_PORT: 30009
    DHT_PORT: 30010

    VALIDATOR_CONSOLE_PORT: 30011
    VALIDATOR_PUBLIC_PORT: 30012
    VALIDATOR_LITESERVER_PORT: 30013

    env:
      - name: CONFIG
        value: "https://newton-blockchain.github.io/testnet-global.config.json"
      - name: VERBOSE
        value: "3"

  httpConfig:
    PUBLIC_PORT: 8081


  testnetHttpConfig:
    PUBLIC_PORT: 8082

  ownnetHttpConfig:
    PUBLIC_PORT: 8085

  toncenter:
    PUBLIC_PORT: 8083

    env:
      - name: TON_API_CACHE_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_LOGS_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_RATE_LIMIT_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_SSL_ENABLED # this is not real ssl (hi toncenter folks)
        value: "0"
      - name: TON_API_ANALYTICS_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_CLOUDFLARE_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_GET_METHODS_ENABLED
        value: "1"
      - name: TON_API_JSON_RPC_ENABLED
        value: "1"
      - name: TON_API_WEBSERVERS_WORKERS
        value: "1"

  testnetToncenter:
    PUBLIC_PORT: 8084
    CONFIG: https://http-config.testnet.ton.head-labs.com/config-local.json

    env:
      - name: TON_API_CACHE_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_LOGS_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_RATE_LIMIT_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_SSL_ENABLED # this is not real ssl (hi toncenter folks)
        value: "0"
      - name: TON_API_ANALYTICS_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_CLOUDFLARE_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_GET_METHODS_ENABLED
        value: "1"
      - name: TON_API_JSON_RPC_ENABLED
        value: "1"
      - name: TON_API_WEBSERVERS_WORKERS
        value: "1"

  ownnetToncenter:
    PUBLIC_PORT: 8086
    CONFIG: https://http-config.ownnet.ton.head-labs.com/config.json

    env:
      - name: TON_API_CACHE_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_LOGS_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_RATE_LIMIT_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_SSL_ENABLED # this is not real ssl (hi toncenter folks)
        value: "0"
      - name: TON_API_ANALYTICS_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_CLOUDFLARE_ENABLED # don't change (if you don't know wtf is toncenter)
        value: "0"
      - name: TON_API_GET_METHODS_ENABLED
        value: "1"
      - name: TON_API_JSON_RPC_ENABLED
        value: "1"
      - name: TON_API_WEBSERVERS_WORKERS
        value: "1"

# TODO: fix

nodeSelector:
  mainnet:
    nodeSelector:
      name: head-labs-ton
  testnet:
    nodeSelector:
      name: head-labs-ton
  ownnet: # ownnet nodes will have this settings (only main)
    nodeSelector:
      name: head-labs-ton

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

  hosts:
    testnetHttpConfig: http-config.testnet.ton.head-labs.com
    testnetToncenter: toncenter.testnet.ton.head-labs.com
    ownnetHttpConfig: http-config.ownnet.ton.head-labs.com
    ownnetToncenter: toncenter.ownnet.ton.head-labs.com
